version: '3.6'
services:
  postgres:
    image: docker.io/postgres:13.5-alpine3.15
    command: postgres -c jit=off
    container_name: app_postgres13.5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
  graphql-engine:
    container_name: app_hasura
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - DB_USER=${POSTGRES_USER}
        - DB_PASSWORD=${POSTGRES_PASSWORD}
        - DB_HOST=${POSTGRES_HOST}
        - DB_PORT=${POSTGRES_PORT}
        - DB_DATABASE=${POSTGRES_DB}
        - HASURA_ADMIN_SECRET=${HASURA_ADMIN_SECRET}
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
  tf:
    image: hashicorp/terraform:1.2.1
    container_name: terraform_container
    tty: true
    working_dir: /terraform   #コンテナ内の作業ディレクトリ指定
    volumes:
      - ./terraform/:/terraform:cached   #ローカルのterraformディレクトリ配下をコンテナ内の作業ディレクトリ内にバインドマウント
      - ./gcloud-config:/root/.config   #ローカルのgcloud認証情報をterraform用コンテナにバインドマウント
    environment:
      - TF_VAR_billing_id=$TF_VAR_billing_id
      - TF_VAR_gcp_project=$TF_VAR_gcp_project
  gcloud:
    image: google/cloud-sdk:386.0.0-alpine
    container_name: 'gcloud'
    working_dir: /terraform
    volumes:
      - ./gcloud-config:/root/.config
volumes:
  db_data:
  gcloud-config:  #バインドマウント先としてローカルディレクトリ指定、存在しない場合は自動で作成される